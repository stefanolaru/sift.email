# requests stream consumer
streamConsumerUsage:
    handler: backend/functions/stream_consumer/usage.handler
    memorySize: 128
    timeout: 10
    role: StreamConsumerRole
    environment:
        DDB_TABLE: !Ref Table
    events:
        - stream:
              type: dynamodb
              arn: !GetAtt Table.StreamArn
              maximumRetryAttempts: 1
              batchSize: 10
              # only execute for request entries
              filterPatterns:
                  - eventName: [INSERT]
                    dynamodb:
                        NewImage:
                            entity_type:
                                S: [request]
# domain stream consumer
streamConsumerDomain:
    handler: backend/functions/stream_consumer/domain.handler
    memorySize: 256
    timeout: 30
    role: StreamConsumerRole
    environment:
        QUEUE: !Ref Queue
    events:
        - stream:
              type: dynamodb
              arn: !GetAtt Table.StreamArn
              maximumRetryAttempts: 1
              batchSize: 10
              # only execute for request entries
              filterPatterns:
                  - eventName: [INSERT]
                    dynamodb:
                        NewImage:
                            entity_type:
                                S: [domain_check]
# progress stream consumer
streamConsumerProgress:
    handler: backend/functions/stream_consumer/progress.handler
    memorySize: 256
    timeout: 10
    role: StreamConsumerRole
    environment:
        DDB_TABLE: !Ref Table
        SNS_TOPIC: !Ref ListValidationEndTopic
    events:
        - stream:
              type: dynamodb
              arn: !GetAtt Table.StreamArn
              maximumRetryAttempts: 1
              batchSize: 10
              filterPatterns:
                  - eventName: [MODIFY]
                    dynamodb:
                        NewImage:
                            entity_type:
                                S: [domain_check]
