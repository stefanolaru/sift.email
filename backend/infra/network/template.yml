Description: Sift VPC

Parameters:
    VpcCIDR:
        Description: VPC IP range (CIDR notation)
        Type: String
        Default: 10.19.0.0/16
    PublicSubnet1CIDR:
        Description: IP range for the Public Subnet in AZ1
        Type: String
        Default: 10.19.10.0/24
    PublicSubnet2CIDR:
        Description: IP range for the Public Subnet in AZ2
        Type: String
        Default: 10.19.11.0/24
    PrivateSubnet1CIDR:
        Description: IP range for the Private Subnet in AZ1
        Type: String
        Default: 10.19.20.0/24
    PrivateSubnet2CIDR:
        Description: IP range for the Private Subnet in AZ2
        Type: String
        Default: 10.19.21.0/24

Metadata:
    AWS::CloudFormation::Interface:
        ParameterGroups:
            - Label:
                  default: "Network Configuration"
              Parameters:
                  - VpcCIDR
                  - PublicSubnet1CIDR
                  - PublicSubnet2CIDR
                  - PrivateSubnet1CIDR
                  - PrivateSubnet2CIDR

Resources:
    # VPC
    VPC:
        Type: AWS::EC2::VPC
        Properties:
            CidrBlock: !Ref VpcCIDR
            EnableDnsSupport: true
            EnableDnsHostnames: true
            Tags:
                - Key: Name
                  Value: !Sub ${AWS::StackName}

    # IG
    InternetGateway:
        Type: AWS::EC2::InternetGateway
        Properties:
            Tags:
                - Key: Name
                  Value: !Sub ${AWS::StackName}

    # Attach IG to VPC
    InternetGatewayAttachment:
        Type: AWS::EC2::VPCGatewayAttachment
        Properties:
            InternetGatewayId: !Ref InternetGateway
            VpcId: !Ref VPC

    # Public Subnet #1
    PublicSubnet1:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select [0, !GetAZs ""]
            CidrBlock: !Ref PublicSubnet1CIDR
            MapPublicIpOnLaunch: true
            Tags:
                - Key: Name
                  Value: !Sub ${AWS::StackName} Public Subnet (AZ1)

    # Public Subnet #2
    PublicSubnet2:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select [1, !GetAZs ""]
            CidrBlock: !Ref PublicSubnet2CIDR
            MapPublicIpOnLaunch: true
            Tags:
                - Key: Name
                  Value: !Sub ${AWS::StackName} Public Subnet (AZ2)

    # Public Route Table
    PublicRouteTable:
        Type: AWS::EC2::RouteTable
        Properties:
            VpcId: !Ref VPC
            Tags:
                - Key: Name
                  Value: !Sub ${AWS::StackName} Public Routes

    # Default Route to IG
    DefaultPublicRoute:
        Type: AWS::EC2::Route
        DependsOn: InternetGatewayAttachment
        Properties:
            RouteTableId: !Ref PublicRouteTable
            DestinationCidrBlock: 0.0.0.0/0
            GatewayId: !Ref InternetGateway

    # Public SN1
    PublicSubnet1RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PublicRouteTable
            SubnetId: !Ref PublicSubnet1

    # Public SN2
    PublicSubnet2RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PublicRouteTable
            SubnetId: !Ref PublicSubnet2

    # Private Subnet #1
    PrivateSubnet1:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select [0, !GetAZs ""]
            CidrBlock: !Ref PrivateSubnet1CIDR
            MapPublicIpOnLaunch: false
            Tags:
                - Key: Name
                  Value: !Sub ${AWS::StackName} Private Subnet (AZ1)

    # Private Subnet #2
    PrivateSubnet2:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select [1, !GetAZs ""]
            CidrBlock: !Ref PrivateSubnet2CIDR
            MapPublicIpOnLaunch: false
            Tags:
                - Key: Name
                  Value: !Sub ${AWS::StackName} Private Subnet (AZ2)

    PrivateRouteTable:
        Type: AWS::EC2::RouteTable
        Properties:
            VpcId: !Ref VPC
            Tags:
                - Key: Name
                  Value: !Sub ${AWS::StackName} Private Routes

    DefaultPrivateRoute:
        Type: AWS::EC2::Route
        Properties:
            RouteTableId: !Ref PrivateRouteTable
            DestinationCidrBlock: 0.0.0.0/0
            NatGatewayId: !Ref NatGateway1

    # Private SN1
    PrivateSubnet1RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PrivateRouteTable
            SubnetId: !Ref PrivateSubnet1

    # Private SN2
    PrivateSubnet2RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PrivateRouteTable
            SubnetId: !Ref PrivateSubnet2

    # Elastic IP
    ElasticIP:
        Type: AWS::EC2::EIP
        DeletionPolicy: Retain
        Properties:
            Domain: vpc
            Tags:
                - Key: Name
                  Value: !Sub ${AWS::StackName} IP

    # NAT Gateway
    NatGateway1:
        Type: AWS::EC2::NatGateway
        Properties:
            AllocationId: !GetAtt ElasticIP.AllocationId
            SubnetId: !Ref PublicSubnet1
            Tags:
                - Key: Name
                  Value: !Sub ${AWS::StackName} NAT Gateway (Public Subnet 1)
                - Key: project
                  Value: sift

Outputs:
    VPC:
        Description: The ID of the VPC
        Value: !Ref VPC
        Export:
            Name: !Sub ${AWS::StackName}-VPCID
    VPCCidrBlock:
        Description: The VPCCidrBlock of the VPC
        Value: !GetAtt VPC.CidrBlock
        Export:
            Name: !Sub ${AWS::StackName}-VPCCidrBlock
    PublicSubnet1:
        Description: Public Subnet 1
        Value: !Ref PublicSubnet1
        Export:
            Name: !Sub ${AWS::StackName}-PublicSubnet1
    PublicSubnet2:
        Description: Public Subnet 2
        Value: !Ref PublicSubnet2
        Export:
            Name: !Sub ${AWS::StackName}-PublicSubnet2
    PrivateSubnet1:
        Description: Private Subnet 1
        Value: !Ref PrivateSubnet1
        Export:
            Name: !Sub ${AWS::StackName}-PrivateSubnet1
    PrivateSubnet2:
        Description: Private Subnet 2
        Value: !Ref PrivateSubnet2
        Export:
            Name: !Sub ${AWS::StackName}-PrivateSubnet2
    ElasticIP:
        Value: !Ref ElasticIP
        Description: The Elastic IP associated to the NAT Gateway
        Export:
            Name: !Sub ${AWS::StackName}-ElasticIP
